<?php

/**
 * PluginTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginTweet extends BaseTweet
{
  /**
   * creates Tweet object from std object
   * @param Standard Object $t - object retrieved from json_decode
   * @see json_decode
   * @return Tweet object
   */
  static public function hydrateFromDecodedResponse($t)
  {
    $tweet = new Tweet();
    $tweet['guid']            = $t->id_str                   ? $t->id_str : false;
    $tweet['twitter_user_id'] = $t->user->id                 ? $t->user->id : false;
    $tweet['screen_name']     = $t->user->screen_name        ? $t->user->screen_name : false;
    $tweet['display_name']    = $t->user->name               ? $t->user->name : false;
    $tweet['profile_pic']     = $t->user->profile_image_url  ? $t->user->profile_image_url : false;
    $tweet['body']            = $t->text                     ? $t->text : false;
    self::processGeoData($t,$tweet);
    return $tweet;
  }

  static public function processGeoData(stdClass $d, Tweet $tweet)
  {
    // Twitter gives us a bounding box, so work with the opposite corners to
    // derive the centre point which is what we'll use for our geo properties
    // The data looks something like this:
    // array(
    //   'type' => 'Polygon',
    //   'coordinates' => array (
    //     0 => 
    //     array (
    //       0 => 
    //       array (
    //         0 => -1.052995,
    //         1 => 51.409779,
    //       ),
    //       1 => 
    //       array (
    //         0 => -0.928323,
    //         1 => 51.409779,
    //       ),
    //       2 => 
    //       array (
    //         0 => -0.928323,
    //         1 => 51.493078,
    //       ),
    //       3 => 
    //       array (
    //         0 => -1.052995,
    //         1 => 51.493078,
    //       ),
    //     ),
    //   ),
    // )),
    if(isset($d->place->bounding_box))
    {
      $box = $d->place->bounding_box->coordinates;
      $tweet['latitude']  = ($box[0][0][1] + $box[0][2][1]) / 2;
      $tweet['longitude'] = ($box[0][0][0] + $box[0][2][0]) / 2;
    }
    return $tweet;
  }

}